{"version":3,"sources":["Components/Card/Card.module.css","Components/Find/ShortCards.module.css","Components/Card/LongCard.jsx","Components/Card/Card.jsx","API/api.js","Redux/ReducerCards.js","Components/Find/ShortCards.jsx","Components/Find/Keys.jsx","Components/Find/Find.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js","Components/Find/Find.module.css","Components/Card/LongCard.module.css"],"names":["module","exports","Weather1","props","description","LongCard","element1","weather","map","w","icon","id","className","s","longCard","header","name","temp","Math","floor","main","properties","property","propertyKey","propertyValue","clouds","all","humidity","feels_like","pressure","temp_min","temp_max","wind","speed","deg","gust","connect","state","cities","cardspage","citiesSaved","c","match","params","cityName","cardPage","cardsApi","axios","then","response","data","city","SET_WEATHER","SET_WEATHER_CITY","DELETE_WEATHER","DELETE_WEATHER_CITY","initialState","JSON","parse","localStorage","getItem","SetCitySaved","citySaved","type","cardsReducer","action","setItem","stringify","storedCities","Object","entries","reduce","result","key","value","Weather","ShortCards","element","styles","card","buttons","onClick","addCard","getCards","Keys","to","e","preventDefault","deleteCard","updateCard","AllReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","input","placeholder","dispatch","a","shortcards","values","shortcards2","find","FormData","length","cardsList","App","path","exact","Finder","CardCity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e2204d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardPage\":\"Card_cardPage__1T6Sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ShortCards_card__1rZJh\",\"element\":\"ShortCards_element__1PMaE\",\"city\":\"ShortCards_city__2qybW\",\"temp\":\"ShortCards_temp__2FY35\",\"buttons\":\"ShortCards_buttons__1D-fO\"};","import React from 'react'\r\nimport s from './LongCard.module.css'\r\n\r\nconst LongCard = (props) => {\r\n    let element1 = props.weather.map(w => <Weather1 key={w.id} description={w.description} icon={w.icon}/>)\r\n\r\n    return (\r\n        <div className={s.longCard}>\r\n            <div className={s.header}>\r\n                <p className={s.name}>{props.name}</p>\r\n                <p className={s.temp}>\r\n                    { Math.floor(props.main.temp - 273.15)} Â°C\r\n                </p>\r\n            </div>\r\n            <div className={s.properties}>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Clouds\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    {props.clouds.all}\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Humidity\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    {props.main.humidity}\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Weather\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    {element1}\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Feels Like\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    { Math.floor(props.main.feels_like - 273.15)} Â°C\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Pressure\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    {props.main.pressure}\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Temperature min\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    { Math.floor(props.main.temp_min - 273.15)} Â°C\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Temperature max\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    { Math.floor(props.main.temp_max - 273.15)} Â°C\r\n                </span>\r\n                </p>\r\n                <p className={s.property}>\r\n                <span className={s.propertyKey}>\r\n                    Wind\r\n                </span>\r\n                    <span className={s.propertyValue}>\r\n                    {props.wind.speed}{props.wind.deg}{props.wind.gust}\r\n                </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst Weather1 = (props) => {\r\n    return (<div>\r\n            {props.description}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LongCard","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport LongCard from './LongCard'\r\nimport s from './Card.module.css'\r\n\r\nconst CardCity = (props) => {\r\n    const c =\r\n        props.cities[props.match.params.cityName] ||\r\n        props.citiesSaved[props.match.params.cityName]\r\n\r\n    if (c) {\r\n        return (\r\n            <div className={s.cardPage}>\r\n                <LongCard\r\n                    key={c.id}\r\n                    name={c.name}\r\n                    main={c.main}\r\n                    weather={c.weather}\r\n                    clouds={c.clouds}\r\n                    wind={c.wind}\r\n                    id={c.id}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div>Not Found</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cities: state.cardspage.cities,\r\n    citiesSaved: state.cardspage.citiesSaved\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CardCity)\r\n","import * as axios from \"axios\"\r\n\r\nexport const cardsApi={\r\n    getCards(name){\r\n      return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${name}&APPID=d9279800525f8f4ec68ab9939dc2ace6`,\r\n          )\r\n          .then(response =>{ \r\n              return response.data\r\n          })\r\n          \r\n    },\r\n    updateCards(city){\r\n        return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=d9279800525f8f4ec68ab9939dc2ace6`,\r\n            )\r\n            .then(response =>{  \r\n                return response.data \r\n            })\r\n            \r\n      }\r\n    \r\n} \r\n","import {cardsApi} from '../API/api'\r\n\r\nconst SET_WEATHER = 'SET_WEATHER'\r\nconst SET_WEATHER_CITY = 'SET_WEATHER_CITY'\r\nconst DELETE_WEATHER = 'DELETE_WEATHER'\r\nconst DELETE_WEATHER_CITY = 'DELETE_WEATHER_CITY'\r\n\r\nconst initialState = {\r\n    cities: {},\r\n    citiesSaved:JSON.parse(localStorage.getItem('citiesSaved') || '{}'),\r\n}\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER: {\r\n            const cities = {\r\n                ...state.cities,\r\n                [action.city.name]: action.city\r\n            }\r\n            return {\r\n                ...state,\r\n                cities: cities,\r\n            }\r\n        }\r\n        case SET_WEATHER_CITY: {\r\n            const citiesSaved = {\r\n                ...state.citiesSaved,\r\n                [action.citySaved.name]: action.citySaved,\r\n            }\r\n            localStorage.setItem('citiesSaved', JSON.stringify(citiesSaved))\r\n            return {\r\n                ...state,\r\n                citiesSaved: citiesSaved,\r\n            }\r\n        }\r\n        case DELETE_WEATHER_CITY: {\r\n            const storedCities = JSON.parse(localStorage.getItem('citiesSaved') || '{}')\r\n            if (storedCities[action.name]) {\r\n                delete storedCities[action.name]\r\n                localStorage.setItem('citiesSaved', JSON.stringify(storedCities))\r\n            }\r\n            return {\r\n                ...state,\r\n                citiesSaved: Object.entries(state.citiesSaved).reduce((result, [key, value]) => {\r\n                    if (key !== action.name) {\r\n                        result[key] = value\r\n                    }\r\n\r\n                    return result\r\n                }, {})\r\n            }\r\n        }\r\n        case DELETE_WEATHER: {\r\n            return {\r\n                ...state,\r\n                cities: Object.entries(state.cities).reduce((result, [key, value]) => {\r\n                    if (key !== action.name) {\r\n                        result[key] = value\r\n                    }\r\n\r\n                    return result\r\n                }, {})\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const SetCity = (city) => ({type: SET_WEATHER, city})\r\nexport const SetCitySaved = (citySaved) => ({type: SET_WEATHER_CITY, citySaved})\r\nexport const DeleteCity = (name) => ({ type: DELETE_WEATHER, name })\r\nexport const DeleteCitySaved = (name) => ({ type: DELETE_WEATHER_CITY, name })\r\n\r\nexport const getCards = (name) => async (dispatch) => {\r\n    let data = await cardsApi.getCards(name)\r\n    dispatch(SetCity(data))\r\n}\r\nexport const updateCard = (city) => async (dispatch) => {\r\n    let data = await cardsApi.updateCards(city)\r\n    dispatch(SetCitySaved(data))\r\n}\r\n\r\nexport const deleteCard = (cityName) => (dispatch) => {\r\n    dispatch(DeleteCitySaved(cityName))\r\n}\r\n\r\nexport const addCard = (city) => (dispatch) => {\r\n    dispatch(SetCitySaved(city))\r\n    dispatch(DeleteCity(city.name))\r\n}\r\n\r\nexport default cardsReducer\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './ShortCards.module.css'\r\nconst ShortCards=(props)=>{\r\n  let name = props.name\r\n\r\n  let Add = ()=>{\r\n      props.addCard(props)\r\n  }\r\n\r\n  let element = props.weather.map(w => <Weather key={w.id} description={w.description} icon={w.icon} />)\r\n \r\n  return(\r\n      <div className={styles.card}>\r\n          <div className={styles.city}>\r\n              {props.name}\r\n          </div>\r\n          <div className={styles.temp}>\r\n              { Math.floor(props.main.temp - 273.15)} Â°C\r\n          </div>\r\n          <div className={styles.element}>\r\n              {element}\r\n          </div>\r\n          <div>\r\n              <div className={styles.buttons}>\r\n                  <button onClick={Add}>Add</button>\r\n                  <button onClick={() => {\r\n                      props.getCards(name)\r\n                  }}> Update\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n const Weather =(props) =>{\r\n   return(<div>\r\n     {props.description}\r\n   </div>\r\n\r\n   )\r\n }\r\n\r\n\r\nexport default ShortCards\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport styles from './ShortCards.module.css'\r\n\r\nconst Keys = (props) => {\r\n    let Delete = () => {\r\n        props.deleteCard(props.name)\r\n    }\r\n\r\n    let name = props.name\r\n\r\n    let element = props.weather.map(w => <Weather key={w.id} description={w.description} icon={w.icon}/>)\r\n\r\n    return (\r\n        <NavLink to={'/card/' + props.name} className={styles.card}>\r\n            <div className={styles.city}>\r\n                {props.name}\r\n            </div>\r\n            <div className={styles.temp}>\r\n                { Math.floor(props.main.temp - 273.15)} Â°C\r\n            </div>\r\n            <div className={styles.element}>\r\n                {element}\r\n            </div>\r\n            <div className={styles.buttons}>\r\n                <button onClick={e => {\r\n                    e.preventDefault()\r\n                    Delete(e)\r\n                }}>\r\n                    Delete\r\n                </button>\r\n                <button onClick={e => {\r\n                    e.preventDefault()\r\n                    props.updateCard(name)\r\n                }}>\r\n                    Update\r\n                </button>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nconst Weather = (props) => {\r\n    return (<div>\r\n            {props.description}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Keys\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {getCards, updateCard, deleteCard, addCard} from '../../Redux/ReducerCards'\r\nimport ShortCards from './ShortCards'\r\nimport Keys from './Keys'\r\nimport styles from './Find.module.css'\r\n\r\nconst CityForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n            <div>\r\n                <Field\r\n                    type='text'\r\n                    component={(props) => < input {...props.input} placeholder='Enter city name'/>}\r\n                    name=\"name\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AllReduxForm = reduxForm({form: 'cards'})(CityForm)\r\n\r\nconst Finder = (props) => {\r\n    let shortcards = Object\r\n        .values(props.cities)\r\n        .map(c => <ShortCards\r\n            getCards={props.getCards}\r\n            addCard={props.addCard}\r\n            key={c.id}\r\n            name={c.name}\r\n            main={c.main}\r\n            weather={c.weather}\r\n            clouds={c.clouds}\r\n            wind={c.wind}\r\n            id={c.id}\r\n        />)\r\n\r\n    let shortcards2 = Object\r\n        .values(props.citiesSaved)\r\n        .map(c => <Keys\r\n            updateCard={props.updateCard}\r\n            deleteCard={props.deleteCard}\r\n            key={c.id}\r\n            name={c.name}\r\n            main={c.main}\r\n            weather={c.weather}\r\n            clouds={c.clouds}\r\n            wind={c.wind}\r\n            id={c.id}\r\n        />)\r\n\r\n    const onSubmit = (FormData) => {\r\n        props.getCards(FormData.name)\r\n    }\r\n    return (\r\n        <div className={styles.find}>\r\n            <AllReduxForm onSubmit={onSubmit}/>\r\n            {shortcards.length ? <h3>Current weather</h3> : ''}\r\n            <div className={styles.cardsList}>\r\n                {shortcards}\r\n            </div>\r\n            {shortcards2.length ? <h3>Saved cities</h3> : ''}\r\n            <div className={styles.cardsList}>\r\n                {shortcards2}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cities: state.cardspage.cities,\r\n    citiesSaved: state.cardspage.citiesSaved\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCards, updateCard, deleteCard, addCard})(Finder)\r\n","import React from 'react'\r\nimport './App.css'\r\nimport {Route } from \"react-router\";\r\nimport CardCity from \"./Components/Card/Card\"\r\nimport Finder from './Components/Find/Find';\r\n\r\n\r\nconst App = (props)=>{\r\n  return (\r\n    <div>\r\n      <Route path='/w' exact component={Finder} />\r\n       <Route path='/w/card/:cityName' component={CardCity} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport cardsReducer from \"./ReducerCards\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers( {\r\n    cardspage: cardsReducer,\r\n    form: formReducer,\r\n })\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/redux-store\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n   \r\n     <BrowserRouter> \r\n    <Provider store={store} >      \r\n    <App />\r\n    </Provider> \r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n//<React.StrictMode>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Find_find__2UC6k\",\"form\":\"Find_form__1g72P\",\"cardsList\":\"Find_cardsList__2XB7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"longCard\":\"LongCard_longCard__1ZW47\",\"header\":\"LongCard_header__1RPyH\",\"name\":\"LongCard_name__3goBW\",\"temp\":\"LongCard_temp__iyMks\",\"property\":\"LongCard_property__2Sj-V\",\"properties\":\"LongCard_properties__25MNJ\",\"propertyKey\":\"LongCard_propertyKey__K9geS\",\"propertyValue\":\"LongCard_propertyValue__2Himt\"};"],"sourceRoot":""}